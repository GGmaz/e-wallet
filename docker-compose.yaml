version: "3"
services:
  pgU:
    image: postgres:latest
    restart: always
    container_name: user-service-pg
    environment:
      POSTGRES_USER: XML
      POSTGRES_PASSWORD: ftn
      POSTGRES_DB: XML_TEST
    ports:
      - "4003:5432"
    healthcheck:
      test: ["CMD-SHELL", 'pg_isready -U XML -d "XML_TEST"']
      interval: 5s
      timeout: 5s
      retries: 5

  pgT:
    image: postgres:latest
    restart: always
    container_name: transaction-service-pg
    environment:
      POSTGRES_USER: XML
      POSTGRES_PASSWORD: ftn
      POSTGRES_DB: XML_TEST
    ports:
      - "4004:5432"
    healthcheck:
      test: [ "CMD-SHELL", 'pg_isready -U XML -d "XML_TEST"' ]
      interval: 5s
      timeout: 5s
      retries: 5

  user-service:
    build:
      context: ./user-service
      dockerfile: DockerfileU
    container_name: user-service
    restart: always
    environment:
      - USER_SERVICE_HOST=user-service
      - USER_SERVICE_PORT=8081
      - USER_DB_USER=XML
      - USER_DB_HOST=pgU
      - USER_DB_PASSWORD=ftn
      - USER_DB_NAME=XML_TEST
      - USER_DB_PORT=5432
      - TRANSACTION_SERVICE_HOST=transaction-service
      - TRANSACTION_SERVICE_PORT=8082
      - KAFKA_URL=kafka:9092
      - NATS_URL=nats:4222
    ports:
      - "8081:8081"
    depends_on:
      pgU:
        condition: service_healthy

  transaction-service:
    build:
      context: ./transaction-service
      dockerfile: Dockerfile
    container_name: transaction-service
    restart: always
    environment:
      - TRANSACTION_SERVICE_HOST=transaction-service
      - TRANSACTION_SERVICE_PORT=8082
      - TRANSACTION_DB_USER=XML
      - TRANSACTION_DB_HOST=pgT
      - TRANSACTION_DB_PASSWORD=ftn
      - TRANSACTION_DB_NAME=XML_TEST
      - TRANSACTION_DB_PORT=5432
      - KAFKA_URL=kafka:9092
      - NATS_URL=nats:4222
    ports:
      - "8082:8082"
    depends_on:
      pgT:
        condition: service_healthy

  nats:
    image: nats:latest
    ports:
      - "4222:4222"  # NATS server port

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "user-created:1:1"
